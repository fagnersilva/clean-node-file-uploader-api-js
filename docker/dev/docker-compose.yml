version: '3.7'

services:
  postgres:
    image: postgres:14-alpine
    container_name: ${POSTGRES_CONTAINER_NAME}
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: ${POSTGRES_PORT}
    volumes:
      - ./scripts/postgres/init.sh:/docker-entrypoint-initdb.d/init.sh:rw
      - ./scripts/postgres/files.sql:/docker-entrypoint-initdb.d/files.sql:rw
      - postgres_data:/var/lib/postgresql/data
    restart: always
    ports:
      - ${POSTGRES_PORT}:5432
  app:
    image: node:lts-alpine
    container_name: ${APP_CONTAINER_NAME}
    working_dir: /usr/projects/clean-node-file-uploader-api-js
    volumes:
      - ./src/:/usr/projects/clean-node-file-uploader-api-js/src/
      - ./package.json:/usr/projects/clean-node-file-uploader-api-js/package.json
      - ./babel.config.js:/usr/projects/clean-node-file-uploader-api-js/babel.config.js
    env_file:
     - ./.env
    command: sh -c "npm run create:temp && npm run create:upload && npm install && npm run start"
    restart: always
    ports:
      - ${APPLICATION_PORT}:3333
    depends_on:
      - postgres
volumes:
  postgres_data: {}
